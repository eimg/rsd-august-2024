import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import { Clapperboard, Video, Search } from "lucide-react";

import Link from "next/link";
import { Button } from "@/components/ui/button";
import { ThemeProvider } from "@/components/theme-provider";
import { ModeToggle } from "@/components/mode-toggle";
import { Input } from "@/components/ui/input";
import { redirect } from "next/navigation";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});

const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

interface Genre {
	id: number;
	name: string;
}

async function fetchGenres(): Promise<Genre[]> {
	const res = await fetch("https://api.themoviedb.org/3/genre/movie/list", {
		headers: {
			Authorization: `Bearer ${process.env.TMDB_TOKEN}`,
		},
	});

	const data = await res.json();
	return data.genres;
}

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const genres = await fetchGenres();

	async function searchMovies(formData: FormData) {
		"use server";

		const q = formData.get("q");

		redirect(`/search?q=${q}`);
	}

	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
				<ThemeProvider
					attribute="class"
					defaultTheme="system"
					enableSystem
					disableTransitionOnChange>
					<div className="p-4 border-b flex justify-between items-center">
						<h1 className="text-2xl font-bold flex gap-2 items-center">
							<Clapperboard size={32} />
							<Link href="/">Movie</Link>
						</h1>

						<div className="flex gap-3 items-center">
							<form
								action={searchMovies}
								className="flex items-center gap-1">
								<Input
									placeholder="Search"
									name="q"
								/>
								<Button variant="ghost">
									<Search />
								</Button>
							</form>
							<ModeToggle />
						</div>
					</div>

					<div className="flex">
						<div className="w-[300px] p-4 border-r flex flex-col gap-1">
							{genres.map(genre => {
								return (
									<Button
										variant="outline"
										asChild
										className="justify-start">
										<Link
											href={`/genre/${genre.name}/${genre.id}`}
											className="flex items-center gap-2">
											<Video />
											{genre.name}
										</Link>
									</Button>
								);
							})}
						</div>
						<div className="p-4">{children}</div>
					</div>
				</ThemeProvider>
			</body>
		</html>
	);
}
